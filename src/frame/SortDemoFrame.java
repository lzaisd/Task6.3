package frame;

import javax.swing.*;

import logic.RadixSort;
import util.ArrayUtils;
import util.JTableUtils;
import util.SwingUtils;
import java.util.ArrayList;


public class SortDemoFrame extends JFrame {
    private JButton buttonSample1;
    private JButton buttonRandom1;
    private JButton buttonRandom2;
    private JTable tableArr;
    private JPanel panelMain;
    private JButton buttonFind;
    private JTable tableAnswer;
    private JTextField textFieldS;

    public SortDemoFrame() {
        this.setTitle("Поразрядная сортировка");
        this.setContentPane(panelMain);
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.pack();

        JTableUtils.initJTableForArray(tableArr, 60, false, true, false, true);
        tableArr.setRowHeight(30);
        JTableUtils.initJTableForArray(tableAnswer, 60, true, false, false, false);
        tableAnswer.setRowHeight(30);
        JTableUtils.resizeJTable(tableAnswer, 1, 3);

        buttonSample1.addActionListener(actionEvent -> {
            int[] arr = {1, 2, 3, 4, 5, 6, 7};
            JTableUtils.writeArrayToJTable(tableArr, arr);
            textFieldS.setText("10");
        });
        buttonRandom1.addActionListener(actionEvent -> {
            int[] arr = ArrayUtils.createRandomIntArray(10, 100);
            JTableUtils.writeArrayToJTable(tableArr, arr);
        });
        buttonRandom2.addActionListener(actionEvent -> {
            int[] arr = ArrayUtils.createRandomIntArray(500, 10000);
            JTableUtils.writeArrayToJTable(tableArr, arr);
        });

        buttonFind.addActionListener(actionEvent -> {
            try {
                ArrayList<int[]> answerTemp = logic.Logic.findTriples(arrayProcessing(util.JTableUtils.readIntArrayFromJTable(tableArr)), Integer.parseInt(textFieldS.getText()));
                if (answerTemp.size() == 0) {
                    SwingUtils.showInfoMessageBox("Тройки не найдены");
                } else {
                    int[][] answer = listToArr(answerTemp);
                    JTableUtils.resizeJTable(tableAnswer, answer.length, 3);
                    JTableUtils.writeArrayToJTable(tableAnswer, answer);
                }
            } catch (Exception ex) {
                SwingUtils.showErrorMessageBox("Тройки не найдены",ex);
            }
        });
    }

    public static int[] arrayProcessing(int[] arr) {
        RadixSort.sort(arr, 10);
        return deleteDuplicates(arr);
    }

    public static int[] deleteDuplicates (int[] arr) {
        int temp = 0;
        for (int i=0; i< arr.length-1; i++)
            if (arr[i] != arr[i+1]) {
                arr[temp++] = arr[i];
            }
        arr[temp++] = arr[arr.length-1];
        return arr;
    }

    public static int[][] listToArr (ArrayList<int[]> list) {
        int[][] arr = new int[list.size()][list.get(0).length];
        for (int i = 0; i < list.size(); i++) {
            System.arraycopy(list.get(i), 0, arr[i], 0, list.get(0).length);
        }
        return arr;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panelMain = new JPanel();
        final JPanel panel1 = new JPanel();
        buttonSample1 = new JButton();
        buttonSample1.setText("Пример 1");
        buttonRandom1 = new JButton();
        buttonRandom1.setText("Random, размер 10");
       buttonRandom2 = new JButton();
        buttonRandom2.setText("Random, размер 500");
        final JPanel panel2 = new JPanel();
        buttonFind = new JButton();
        buttonFind.setText("Поразрядная сортировка");
        final JPanel panel3 = new JPanel();
        final JScrollPane scrollPane1 = new JScrollPane();
        tableArr = new JTable();
        scrollPane1.setViewportView(tableArr);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panelMain;
    }

}
